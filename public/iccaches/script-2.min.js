"use strict";var appModule=angular.module("smModule",["ngRoute","ngCookies","ngResource","ui.bootstrap","ui.router","toastr","ngAnimate"]);appModule.run(["$rootScope","$location","$http",function($rootScope,$location,$http){$rootScope.g={},$rootScope.g.getActiveClass=function(key){return $location.path()==key?"active":""},$rootScope.g.logout=function(key){$http.post("api/user/logout").success(function(){$location.path("login")})}}]),appModule.config(["$stateProvider","$urlRouterProvider","$locationProvider",function($stateProvider,$urlRouterProvider,$locationProvider){$locationProvider.html5Mode({enabled:!1,requireBase:!0}).hashPrefix("!"),$stateProvider.state("login",{url:"/login",templateUrl:"/angular/views/login.html"}),$stateProvider.state("index",{url:"/index",templateUrl:"/angular/views/index.html"}),$urlRouterProvider.otherwise("/login")}]),angular.module("smModule").config(["toastrConfig",function(toastrConfig){angular.extend(toastrConfig,{autoDismiss:!1,containerId:"toast-container",maxOpened:0,newestOnTop:!0,preventDuplicates:!1,preventOpenDuplicates:!1,target:"body"})}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,["smModule"]),setTimeout(function(){$("#front-spinner-bx").hide(),$(".body-main-cn").show()},500)}),appModule.controller("CommonController",["$scope",function($scope){$scope.comnObj1={}}]),appModule.controller("UserController",["$scope","$http","$location","alertService",function($scope,$http,$location,alertService){$scope.uObj={},$scope.uObj.login={},$scope.uObj.login.model={},$scope.uObj.login.submit=function(form){"aa"==$scope.uObj.login.model.username&&"aa"==$scope.uObj.login.model.password?($location.path("index"),alertService.flash("success","Login successfully")):alertService.flash("error","User and Password wrong")}}]),appModule.controller("DashboardController",["$scope","$http","icdb","alertService",function($scope,$http,icdb,alertService){$scope.db={},$scope.lang={},$scope.lang.data=[],$scope.lang.isloading=!1,$scope.lang.init=function(){$scope.lang.isloading=!0,icdb.getCondition("language",{},function(response){$scope.lang.data=response.result,$scope.lang.isloading=!1})},$scope.lang.model={},$scope.lang.submit=function(){$scope.lang.model.name&&icdb.insert("language",{name:$scope.lang.model.name},function(response){$scope.lang.model={},$scope.lang.data.push(response.result)})},$scope.lang.postedit=function(row){row.isEdit=!row.isEdit,$scope.lang.editsubmit=function(row){row.name&&icdb.update("language",row._id,{name:row.name},function(response){response.status&&(row.updatedAt=response.result.updatedAt),row.isEdit=!1})}},$scope.lang.delete=function(row){icdb.remove("language",row._id,function(response){for(var i in $scope.lang.data)$scope.lang.data[i]._id==row._id&&$scope.lang.data.splice(i,1)})},$scope.cat={},$scope.cat.init=function(){$scope.cat.isloading=!0,icdb.getCondition("categories",{},function(response){$scope.cat.data=response.result,console.log("response.result",response.result),$scope.cat.isloading=!1})},$scope.cat.model={},$scope.cat.submit=function(){if($scope.cat.model.name){for(var i in $scope.cat.model.langId=[],$scope.lang.data)$scope.lang.data[i].check&&($scope.cat.model.langId.push($scope.lang.data[i]._id),$scope.lang.data[i].check=!1);$scope.cat.model.langId.length&&icdb.insert("categories",$scope.cat.model,function(response){$scope.cat.model={},$scope.cat.data.push(response.result)})}},$scope.cat.edit=function(row){row.isEdit=!row.isEdit,$scope.cat.editsubmit=function(row){console.log("Helloo"),row.name&&icdb.update("categories",row._id,{name:row.name},function(response){response.status&&(row.updatedAt=response.result.updatedAt),row.isEdit=!1})}},$scope.cat.delete=function(row){icdb.remove("categories",row._id,function(response){for(var i in $scope.cat.data)$scope.cat.data[i]._id==row._id&&$scope.cat.data.splice(i,1)})},$scope.db.subcat={},$scope.db.subcat.data=[],$scope.db.question={},$scope.db.question.data=[],$scope.db.question.isloading=!1,$scope.db.question.init=function(){$scope.db.question.isloading=!0,icdb.getCondition("questions",{},function(response){$scope.db.question.data=response.result,$scope.db.question.isloading=!1})},$scope.db.question.model={},$scope.db.question.openModal=function(row){row&&row._id?($scope.db.question.model=angular.copy(row),$scope.db.question.model.answer1=$scope.db.question.model.answers[0],$scope.db.question.model.answer2=$scope.db.question.model.answers[1],$scope.db.question.model.answer3=$scope.db.question.model.answers[2],$scope.db.question.model.answer4=$scope.db.question.model.answers[3]):$scope.db.question.model.qdata={},$("#questionpopup").modal("show")},$scope.db.question.submit=function(form){if(form.$valid)if($scope.db.question.model._id)icdb.update("questions",$scope.db.question.model._id,$scope.db.question.model,function(response){for(var i in $scope.db.question.data)$scope.db.question.data[i]._id==$scope.db.question.model._id&&($scope.db.question.data[i]=angular.copy($scope.db.question.model),$scope.db.question.data[i].updatedAt=response.result.updatedAt);alertService.flash("success","Question Updated successfully"),$scope.db.question.closeModal()});else{var answers=[$scope.db.question.model.answer1,$scope.db.question.model.answer2,$scope.db.question.model.answer3,$scope.db.question.model.answer4];$scope.db.question.model.answers=answers,icdb.insert("questions",$scope.db.question.model,function(response){$scope.db.question.data.push(response.result),alertService.flash("success","Question Added successfully"),$scope.db.question.closeModal()})}},$scope.db.question.closeModal=function(){$scope.db.question.model={},$("#questionpopup").modal("hide")},$scope.db.question.remove={},$scope.db.question.remove.submit=function(row,model){$("#removequestion").modal("show"),$scope.db.question.remove.removeData=function(){icdb.remove("questions",row._id,function(response){for(var i in $scope.db.question.data)$scope.db.question.data[i]._id==row._id&&$scope.db.question.data.splice(i,1);alertService.flash("success","Question Remove successfully"),$("#removequestion").modal("hide")})}}}]),appModule.factory("IcMean",[function(){return{name:"ic-mean"}}]),appModule.factory("icdb",["$http",function($http){var dataFactory={insert:function(model,data,callback){data.model=model,$http.post("/api/common/add-data",data).success(function(result){callback(result)})},update:function(model,_id,data,callback){data.model=model,data._id=_id,$http.post("/api/common/edit-data",data).success(function(result){callback(result)})},remove:function(model,_id,callback){$http.post("/api/common/delete",{model:model,_id:_id}).success(function(result){callback(result)})},get:function(model,callback){$http.post("/api/common/get-data",{model:model}).success(function(result){callback(result)})},getCondition:function(model,condition,callback){$http.post("/api/common/get-condition",{model:model,condition:condition}).success(function(result){callback(result)})},getSingle:function(model,_id,callback){$http.post("/api/common/single-data",{model:model,_id:_id}).success(function(result){callback(result)})}};return dataFactory}]),appModule.factory("alertService",["toastr",function(toastr){var alertService={};return alertService.flash=function(type,msg,isRedirect){"success"!=type&&"error"!=type||function(msgType,msg){"success"==msgType?toastr.success(msgType,msg):toastr.error(msgType,msg)}(type,msg)},alertService}]);